<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Baris&#39; Personal Blog</title>
    <link>https://bayten.dev/posts/</link>
    <description>Recent content in Posts on Baris&#39; Personal Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Apr 2023 14:46:53 +0300</lastBuildDate><atom:link href="https://bayten.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode | Backspace String Compare</title>
      <link>https://bayten.dev/posts/leetcode-backspace-string-compare/</link>
      <pubDate>Sun, 16 Apr 2023 14:46:53 +0300</pubDate>
      
      <guid>https://bayten.dev/posts/leetcode-backspace-string-compare/</guid>
      <description>Herkese selamlar🤘🏼 Bugünkü sorumuz Backspace String Compare. Soru kolay katergorisinde bulunuyor.
Yavaştan soruya geçelim.
Soruyu Anlayalım🤔 Soruda bize s ve t adında iki tane String değişkeni veriliyor. Bu değişkenler # karakteri içeriyor ve bu karakterin silme görevi yani backspace olduğu söylenmiş. Bizden istenen ise, her bir değişkende backspace karakterinden önce hangi karakter var ise, bu karakteri String değişkenimizden silmemiz.
Soruyu daha net anlayıp, kafamızda canlandırabilmek için bize sunduğu örnekleri inceleyelim.</description>
    </item>
    
    <item>
      <title>Method Overriding and Overloading in Java</title>
      <link>https://bayten.dev/posts/method-overriding-and-overloading-in-java/</link>
      <pubDate>Sat, 01 Apr 2023 09:17:50 +0300</pubDate>
      
      <guid>https://bayten.dev/posts/method-overriding-and-overloading-in-java/</guid>
      <description>Hello everyone 🤘🏼
In this article, we&amp;rsquo;ll be taking a look at the concepts of method overloading and overriding in Java, which I believe are often forgotten and confused by beginners (at least I was 😁).
Before delving into these two concepts in detail, I&amp;rsquo;d like to briefly mention them. Method overriding is simply changing the functionality of a method without changing its signature, while method overloading is redefining a method with a different signature.</description>
    </item>
    
    <item>
      <title>Mutable and Immutable in Java</title>
      <link>https://bayten.dev/posts/mutable-and-immutable-in-java/</link>
      <pubDate>Thu, 23 Mar 2023 15:09:52 +0300</pubDate>
      
      <guid>https://bayten.dev/posts/mutable-and-immutable-in-java/</guid>
      <description>Hello Folks 🖖🏼,
The topic of this article will be about the concept of Mutablity and Immutablity in Java. I will try to answer questions such as &amp;ldquo;What does Mutable &amp;amp; Immutable mean?&amp;rdquo;, &amp;ldquo;What is the logic behind this functionality?&amp;rdquo;, &amp;ldquo;How are Mutable or Immutable classes created?&amp;rdquo;, &amp;ldquo;What are the advantages and disadvantages?&amp;rdquo;.
Let&amp;rsquo;s dive right in and explore these fascinating concepts together. 🚀
1. Mutable Classes Mutable objects are objects that can be modified after they are initialized.</description>
    </item>
    
    <item>
      <title>LeetCode | Best Time to Buy and Sell Stock</title>
      <link>https://bayten.dev/posts/best-time-to-buy-and-sel-stock/</link>
      <pubDate>Fri, 17 Mar 2023 11:52:29 +0300</pubDate>
      
      <guid>https://bayten.dev/posts/best-time-to-buy-and-sel-stock/</guid>
      <description>Selamlar🖖🏼 Bu yazının konusu bir Leetcode sorusu olacak. Competitive Algorithm konusuna ayrıca bir önem ve özen göstermeye çalışıyorum. Ne kadar çok proje yapmış ya da ne kadar tecrübeli olsanız da, bu alan sürekli pratik istiyor. Ben de imkan buldukça her gün bir soru çözüp, kendimi olabildiğince diri ve antrenmanlı tutmaya çalışıyorum. Blogumda da çözdüğüm ve hoşuma giden güzel soruların çözüm yollarını ve kodunu açıklamaya çalışacağım. Bugünkü sorumuz Best Time to Buy and Sell Stock.</description>
    </item>
    
    <item>
      <title>String, StringBuilder, and StringBuffer in Java</title>
      <link>https://bayten.dev/posts/string-stringbuilder-and-stringbuffer-in-java/</link>
      <pubDate>Wed, 15 Mar 2023 12:45:12 +0300</pubDate>
      
      <guid>https://bayten.dev/posts/string-stringbuilder-and-stringbuffer-in-java/</guid>
      <description>Hello!🖖🏼
This article will be about the String class that we frequently use in Java and its alternatives, StringBuilder and StringBuffer. There may be points that I missed, skipped, or inadvertently conveyed incorrectly. If you give me feedback via email in such a situation, I would be very happy.
Now, let&amp;rsquo;s get started🚀
1.String First, let&amp;rsquo;s look at the String class. As we all know, the String class is one of the complex data types in Java that represents character arrays.</description>
    </item>
    
  </channel>
</rss>
